<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="personnel.zpark.dao.CertificateMapper">
  <resultMap id="BaseResultMap" type="personnel.zpark.model.Certificate">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Teacher_ID" jdbcType="INTEGER" property="teacherId" />
    <result column="Reward_Name" jdbcType="VARCHAR" property="rewardName" />
    <result column="Level" jdbcType="INTEGER" property="level" />
    <result column="Grade" jdbcType="INTEGER" property="grade" />
    <result column="Reward_Time" jdbcType="DATE" property="rewardTime" />
    <result column="Awarding_Unit" jdbcType="VARCHAR" property="awardingUnit" />
    <result column="Review_Evaluation" jdbcType="INTEGER" property="reviewEvaluation" />
    <result column="Review_Review" jdbcType="INTEGER" property="reviewReview" />
    <result column="Score_Of_Hour" jdbcType="INTEGER" property="scoreOfHour" />
    <result column="Score_Of_All" jdbcType="INTEGER" property="scoreOfAll" />
    <result column="Score_Of_Weight" jdbcType="INTEGER" property="scoreOfWeight" />
    <result column="Category" jdbcType="INTEGER" property="category" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, Teacher_ID, Reward_Name, Level, Grade, Reward_Time, Awarding_Unit, Review_Evaluation, 
    Review_Review, Score_Of_Hour, Score_Of_All, Score_Of_Weight, Category
  </sql>
  <select id="selectByExample" parameterType="personnel.zpark.model.CertificateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from certificate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from certificate
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from certificate
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="personnel.zpark.model.CertificateExample">
    delete from certificate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="personnel.zpark.model.Certificate">
    insert into certificate (ID, Teacher_ID, Reward_Name, 
      Level, Grade, Reward_Time, 
      Awarding_Unit, Review_Evaluation, Review_Review, 
      Score_Of_Hour, Score_Of_All, Score_Of_Weight, 
      Category)
    values (#{id,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, #{rewardName,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{grade,jdbcType=INTEGER}, #{rewardTime,jdbcType=DATE}, 
      #{awardingUnit,jdbcType=VARCHAR}, #{reviewEvaluation,jdbcType=INTEGER}, #{reviewReview,jdbcType=INTEGER}, 
      #{scoreOfHour,jdbcType=INTEGER}, #{scoreOfAll,jdbcType=INTEGER}, #{scoreOfWeight,jdbcType=INTEGER}, 
      #{category,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="personnel.zpark.model.Certificate">
    insert into certificate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="teacherId != null">
        Teacher_ID,
      </if>
      <if test="rewardName != null">
        Reward_Name,
      </if>
      <if test="level != null">
        Level,
      </if>
      <if test="grade != null">
        Grade,
      </if>
      <if test="rewardTime != null">
        Reward_Time,
      </if>
      <if test="awardingUnit != null">
        Awarding_Unit,
      </if>
      <if test="reviewEvaluation != null">
        Review_Evaluation,
      </if>
      <if test="reviewReview != null">
        Review_Review,
      </if>
      <if test="scoreOfHour != null">
        Score_Of_Hour,
      </if>
      <if test="scoreOfAll != null">
        Score_Of_All,
      </if>
      <if test="scoreOfWeight != null">
        Score_Of_Weight,
      </if>
      <if test="category != null">
        Category,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="rewardName != null">
        #{rewardName,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="rewardTime != null">
        #{rewardTime,jdbcType=DATE},
      </if>
      <if test="awardingUnit != null">
        #{awardingUnit,jdbcType=VARCHAR},
      </if>
      <if test="reviewEvaluation != null">
        #{reviewEvaluation,jdbcType=INTEGER},
      </if>
      <if test="reviewReview != null">
        #{reviewReview,jdbcType=INTEGER},
      </if>
      <if test="scoreOfHour != null">
        #{scoreOfHour,jdbcType=INTEGER},
      </if>
      <if test="scoreOfAll != null">
        #{scoreOfAll,jdbcType=INTEGER},
      </if>
      <if test="scoreOfWeight != null">
        #{scoreOfWeight,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="personnel.zpark.model.CertificateExample" resultType="java.lang.Long">
    select count(*) from certificate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update certificate
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        Teacher_ID = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardName != null">
        Reward_Name = #{record.rewardName,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        Level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null">
        Grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.rewardTime != null">
        Reward_Time = #{record.rewardTime,jdbcType=DATE},
      </if>
      <if test="record.awardingUnit != null">
        Awarding_Unit = #{record.awardingUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewEvaluation != null">
        Review_Evaluation = #{record.reviewEvaluation,jdbcType=INTEGER},
      </if>
      <if test="record.reviewReview != null">
        Review_Review = #{record.reviewReview,jdbcType=INTEGER},
      </if>
      <if test="record.scoreOfHour != null">
        Score_Of_Hour = #{record.scoreOfHour,jdbcType=INTEGER},
      </if>
      <if test="record.scoreOfAll != null">
        Score_Of_All = #{record.scoreOfAll,jdbcType=INTEGER},
      </if>
      <if test="record.scoreOfWeight != null">
        Score_Of_Weight = #{record.scoreOfWeight,jdbcType=INTEGER},
      </if>
      <if test="record.category != null">
        Category = #{record.category,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update certificate
    set ID = #{record.id,jdbcType=INTEGER},
      Teacher_ID = #{record.teacherId,jdbcType=INTEGER},
      Reward_Name = #{record.rewardName,jdbcType=VARCHAR},
      Level = #{record.level,jdbcType=INTEGER},
      Grade = #{record.grade,jdbcType=INTEGER},
      Reward_Time = #{record.rewardTime,jdbcType=DATE},
      Awarding_Unit = #{record.awardingUnit,jdbcType=VARCHAR},
      Review_Evaluation = #{record.reviewEvaluation,jdbcType=INTEGER},
      Review_Review = #{record.reviewReview,jdbcType=INTEGER},
      Score_Of_Hour = #{record.scoreOfHour,jdbcType=INTEGER},
      Score_Of_All = #{record.scoreOfAll,jdbcType=INTEGER},
      Score_Of_Weight = #{record.scoreOfWeight,jdbcType=INTEGER},
      Category = #{record.category,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="personnel.zpark.model.Certificate">
    update certificate
    <set>
      <if test="teacherId != null">
        Teacher_ID = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="rewardName != null">
        Reward_Name = #{rewardName,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        Level = #{level,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        Grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="rewardTime != null">
        Reward_Time = #{rewardTime,jdbcType=DATE},
      </if>
      <if test="awardingUnit != null">
        Awarding_Unit = #{awardingUnit,jdbcType=VARCHAR},
      </if>
      <if test="reviewEvaluation != null">
        Review_Evaluation = #{reviewEvaluation,jdbcType=INTEGER},
      </if>
      <if test="reviewReview != null">
        Review_Review = #{reviewReview,jdbcType=INTEGER},
      </if>
      <if test="scoreOfHour != null">
        Score_Of_Hour = #{scoreOfHour,jdbcType=INTEGER},
      </if>
      <if test="scoreOfAll != null">
        Score_Of_All = #{scoreOfAll,jdbcType=INTEGER},
      </if>
      <if test="scoreOfWeight != null">
        Score_Of_Weight = #{scoreOfWeight,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        Category = #{category,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="personnel.zpark.model.Certificate">
    update certificate
    set Teacher_ID = #{teacherId,jdbcType=INTEGER},
      Reward_Name = #{rewardName,jdbcType=VARCHAR},
      Level = #{level,jdbcType=INTEGER},
      Grade = #{grade,jdbcType=INTEGER},
      Reward_Time = #{rewardTime,jdbcType=DATE},
      Awarding_Unit = #{awardingUnit,jdbcType=VARCHAR},
      Review_Evaluation = #{reviewEvaluation,jdbcType=INTEGER},
      Review_Review = #{reviewReview,jdbcType=INTEGER},
      Score_Of_Hour = #{scoreOfHour,jdbcType=INTEGER},
      Score_Of_All = #{scoreOfAll,jdbcType=INTEGER},
      Score_Of_Weight = #{scoreOfWeight,jdbcType=INTEGER},
      Category = #{category,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>